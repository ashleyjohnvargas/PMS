@{
    Layout = null; // Disable the layout for this view
    ViewData["Title"] = "Register";
}

@model User
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cozy Homes Registration</title>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">

    <!-- Include CSS files -->
    <link rel="stylesheet" href="~/css/loginpage.css" asp-append-version="true" />

    <!-- Boxicons -->
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">

    <!-- Font Awesome Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
    <style>
        body {
            font-family: 'Poppins', Arial, sans-serif;
            background-color: #f4f4f4;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
        }

        label {
            text-align: left;
            display: block;
            margin-bottom: 5px;
        }

        .container {
            margin-top: 30px;
            margin-bottom: 30px;
            background-color: #fff;
            padding: 40px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            text-align: center;
            width: 100%;
            max-width: 500px;
            min-height: auto;
            overflow: hidden;
        }

        h1, h2 {
            color: #333;
            margin: 10px 0;
            font-family: 'Poppins';
        }

        h1 {
            font-size: 24px;
        }

        h2 {
            font-size: 20px;
        }


        input[type="text"],
        input[type="email"],
        input[type="password"] {
            width: 100%;
            padding: 12px;
            margin: 10px 0;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        input[type="checkbox"] {
            margin-right: 5px;
        }

        button {
            width: 100%;
            padding: 10px;
            border: none;
            background-color: #B0836E;
            color: white;
            cursor: pointer;
            margin-top: 10px;
            border-radius: 5px;
        }

            button:hover {
                background-color: #A06A5C;
            }

        a {
            color: #B0836E;
            text-decoration: none;
        }

            a:hover {
                text-decoration: underline;
            }



        .forgot-password {
            display: block;
            margin: 10px 0;
            color: #CBAD8D;
            text-decoration: none;
            text-align: right;
        }

            .forgot-password:hover {
                text-decoration: underline;
            }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: #fff;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 10px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        .container .logo {
            font-size: 25px;
            font-family: 'Poppins';
            margin: 0;
            font-weight: bold;
            color: #B0836E;
        }

        ul.validation-summary-errors {
            list-style-type: none; /* Removes the dot (bullet) */
            padding-left: 0; /* Removes the indentation */
        }

        .validation-summary-errors li {
            color: red; /* Optional: set the text color to red */
            font-weight: bold; /* Optional: make the error messages bold */
        }

        /* .text-danger { */
        /*     color: red; */
        /*     font-weight: 400; */
        /* } */


        /* Change icon color */
        .toggle-password i {
            color: #B0836E; /* Change to any color you prefer */
        }

        /* Optionally, change the size of the icon */
        .toggle-password i {
            margin-top: 35px;
            font-size: 20px; /* Adjust the size if necessary */
        }

        /* Optional: Change color on hover */
        .toggle-password:hover i {
            color: #007bff; /* Color when hovering over the icon */
        }

        }
    </style>
</head>

<body>

    <div class="container" style="position: relative;">
        <!-- Arrow in the upper left -->
        <a href="javascript:history.back()" class="text-decoration-none"
           title="Go Back" style="position: absolute; top: 10px; left: 10px; margin: 30px; font-size: 20px;">
            <i class="fa-solid fa-arrow-left fs-3 text-light"></i>
        </a>

        <div class="logo">
            <img src="~/images/cozy-logo.png" alt="Cozy Homes Logo">
            <span class="logo">Cozy Homes</span>
        </div>
        <h1>Welcome to</h1>
        <h2>Cozy Homes Rental Management System</h2>
        <p>Register with your email to create an account.</p>

        @Html.ValidationSummary(true, "", new { @class = "validation-summary-errors" })
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }


        <!-- New User Registration Form-->
        <form asp-action="RegisterUser" method="post">
            <div class="form-group">
                <div style="display: flex; justify-content: space-between;">
                    <div style="width: 48%;">
                        <label for="first-name">First Name</label>
                        <input type="text" name="FirstName" id="first-name" placeholder="Enter your first name" required>
                    </div>
                    <div style="width: 48%;">
                        <label for="last-name">Last Name</label>
                        <input type="text" name="LastName" id="last-name" placeholder="Enter your last name" required>
                    </div>
                </div>
            </div>

            <!-- Email Field -->
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" name="Email" id="email" placeholder="Enter your email" required>
            </div>

            <!-- Password and Confirm Password Fields -->
            <div class="form-group" style="display: flex; justify-content: space-between;">
                <!-- Password Field -->
                <div style="width: 48%; position: relative;">
                    <label for="password">Password</label>
                    <input type="password" name="Password" id="password" placeholder="Create your password"
                    style="width: 100%; padding-right: 40px;"
                    oninput="updatePasswordLengthCounter('password', 'passwordCounter')"
                    required>
                    <!-- Password length counter -->
                    <span id="passwordCounter"
                          style="position: absolute; top: 10px; right: 10px; font-size: 12px; color: gray;">
                        0/64
                    </span>
                    <span class="toggle-password" onclick="togglePasswordVisibility('password', this)"
                          title="Show/Hide Password"
                          style="position: absolute; top: 50%; transform: translateY(-50%); right: 10px; cursor: pointer;">
                        <i class="bx bx-hide"></i>
                    </span>
                </div>
                <!-- Confirm Password Field -->
                <div style="width: 48%; position: relative;">
                    <label for="confirm-password">Confirm Password</label>
                    <input type="password" name="ConfirmPassword" id="confirm-password" placeholder="Confirm your password"
                           style="width: 100%; padding-right: 40px;"
                           oninput="updateConfirmPasswordLengthCounter('confirm-password', 'confirmPasswordCounter')"
                           required>
                    <!-- Confirm Password length counter -->
                    <span id="confirmPasswordCounter"
                          style="position: absolute; top: 10px; right: 10px; font-size: 12px; color: gray;">
                        0/64
                    </span>
                    <span class="toggle-password" onclick="togglePasswordVisibility('confirm-password', this)"
                          title="Show/Hide Password"
                          style="position: absolute; top: 50%; transform: translateY(-50%); right: 10px; cursor: pointer;">
                        <i class="bx bx-hide"></i>
                    </span>
                </div>
            </div>

            <!-- Password Mismatch Warning -->
            <p id="passwordMatchMessage" style="color: red; font-size: 12px; display: none;">
                Passwords do not match!
            </p>

            <div class="form-group" style="margin:10px">
                <label>
                    <input type="checkbox" name="TermsAndConditions" value="true" required>
                    I agree to the
                    <a href="javascript:void(0);" id="termsLink" >Terms and Conditions</a>
                    and
                    <a href="javascript:void(0);" id="privacyLink">Privacy Policy</a>.
                </label>
            </div>

            <!-- Hidden Properties-->
            <input type="hidden" name="UserID" />
            <input type="hidden"  name="Role" />
            <input type="hidden" name="IsActive" />
            <input type="hidden" name="PhoneNumber" />
            <button type="submit" class="signup-btn">Sign Up</button>

            <p>Already a member? <a asp-controller="Login" asp-action="Login" class="login">Log In</a></p>
        </form>

    </div>

    <!-- Terms Modal -->
    <div id="termsModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Terms and Conditions</h2>
            <p>Welcome to Cozy Homes! By accessing or using our website and services (the “Service”), you agree to comply with and be bound by the following Terms and Conditions (“Terms”). Please read these Terms carefully before using our Service.</p>

            <h2>1. Acceptance of Terms</h2>
            <p>By registering for an account or using the Cozy Homes Rental Management System (the “System”), you agree to these Terms and Conditions. If you do not agree to these Terms, do not access or use our System.</p>

            <h2>2. User Account</h2>
            <p>You may be required to create an account to access certain features of the System. You must provide accurate and complete information when registering, including your name, email address, and password. You are responsible for maintaining the confidentiality of your account information and for all activities that occur under your account.</p>

            <h2>3. Use of the System</h2>
            <p>Cozy Homes is intended solely for users who are seeking rental management services. You agree to use the System only for lawful purposes and in a manner that does not infringe the rights of others or violate any applicable laws.</p>

            <p>Prohibited Activities: You may not:</p>
            <ul>
                <li>Use the System to post, upload, or transmit illegal, harmful, offensive, or abusive content.</li>
                <li>Impersonate any person or entity, or falsely represent your affiliation with any person or entity.</li>
                <li>Engage in unauthorized access or use of the System, including attempting to hack, disrupt, or damage any part of the Service.</li>
            </ul>

            <h2>4. Privacy Policy</h2>
            <p>By using the Service, you agree to our Privacy Policy, which governs the collection, use, and sharing of your personal information. Please review our Privacy Policy to understand how we handle your data.</p>

            <h2>5. User Content</h2>
            <p>You retain ownership of the content you submit through the System, but by submitting content, you grant Cozy Homes a non-exclusive, worldwide, royalty-free license to use, display, and distribute the content for the purposes of providing the Service.</p>

            <h2>6. Subscription and Fees</h2>
            <p>Certain features of the System may require payment. All fees are listed on the Service and are subject to change. You agree to pay all applicable fees and taxes when due.</p>

            <h2>7. Termination</h2>
            <p>We may suspend or terminate your account at any time if we believe you have violated these Terms or if you fail to comply with our policies. Upon termination, your access to the System will be revoked, but any obligations incurred before the termination will remain in effect.</p>

            <h2>8. Disclaimer of Warranties</h2>
            <p>The System is provided “as is” without any warranties of any kind, either express or implied. We do not guarantee that the System will be uninterrupted or error-free. We disclaim all warranties, including but not limited to, the implied warranties of merchantability and fitness for a particular purpose.</p>

            <h2>9. Limitation of Liability</h2>
            <p>Cozy Homes will not be liable for any direct, indirect, incidental, or consequential damages arising from your use of the System, including but not limited to damages for loss of data, profits, or business interruption.</p>

            <h2>10. Changes to Terms</h2>
            <p>We reserve the right to update or modify these Terms at any time without prior notice. Any changes will be effective immediately upon posting. Please review these Terms regularly for any updates.</p>

            <h2>11. Governing Law</h2>
            <p>These Terms are governed by and construed in accordance with the laws of Republic of the Philippines. Any disputes arising out of or related to these Terms shall be resolved through binding arbitration.</p>

            <h2>12. Contact Information</h2>
            <p>If you have any questions about these Terms or the System, please contact us at:</p>

            <p>Email: cozyhomes@gmail.com</p>
            <p>Address: Don Fabian Quezon City</p>
        </div>
    </div>

    <!-- Privacy Modal -->
    <div id="privacyModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Privacy Policy</h2>
            <p>Effective Date: January 1, 2023</p>

            <p>At Cozy Homes, we value your privacy and are committed to protecting your personal information. This Privacy Policy outlines how we collect, use, and protect your personal data when you use the Cozy Homes Rental Management System (“Service”).</p>

            <h2>1. Information We Collect</h2>
            <p>We collect personal information when you register for an account, including but not limited to your first name, last name, email address, and password. This information is required to create and manage your account, and to provide you with the best possible service.</p>

            <h2>2. Use of Information</h2>
            <p>Your personal data will be used to:</p>
            <ul>
                <li>Create and manage your account.</li>
                <li>Provide access to the System.</li>
                <li>Send important notifications and updates regarding your account or the System.</li>
                <li>Improve the performance and functionality of the System.</li>
            </ul>

            <h2>3. Data Sharing and Disclosure</h2>
            <p>We will not sell, trade, or rent your personal information to third parties. However, we may share your information with trusted service providers who assist us in operating the Service, such as hosting or email services, provided that these parties agree to keep your information confidential.</p>

            <p>We may also disclose your personal information when required by law or to protect our rights or the safety of others.</p>

            <h2>4. Data Security</h2>
            <p>We take reasonable steps to protect your personal information from unauthorized access, alteration, or destruction. However, no security measure is completely secure, and we cannot guarantee the absolute security of your information.</p>

            <h2>5. Cookies</h2>
            <p>We may use cookies to enhance your experience while using the System. Cookies are small files stored on your device that allow us to remember your preferences and settings. You can control cookie settings through your browser.</p>

            <h2>6. Your Rights</h2>
            <p>You have the right to access, correct, or delete your personal information stored in our system. You may also withdraw your consent at any time by deactivating your account or contacting us.</p>

            <h2>7. Changes to Privacy Policy</h2>
            <p>We reserve the right to update or change this Privacy Policy at any time. Any changes will be posted on this page with an updated “Effective Date.” We encourage you to review this policy periodically to stay informed.</p>

            <h2>8. Contact Us</h2>
            <p>If you have any questions or concerns about this Privacy Policy or our practices, please contact us at:</p>

            <p>Email: cozyhomes@gmail.com</p>
            <p>Address: Don Fabian, Quezon City, Philippines</p>

            <p>By using the Service, you consent to the collection and use of your information as outlined in this Privacy Policy.</p>
        </div>
    </div>

    <script>
        // Get the modals
        var termsModal = document.getElementById("termsModal");
        var privacyModal = document.getElementById("privacyModal");

        // Get the links that open the modals
        var termsLink = document.getElementById("termsLink");
        var privacyLink = document.getElementById("privacyLink");

        // Get the <span> elements that close the modals
        var closeButtons = document.getElementsByClassName("close");

        // Open Terms Modal
        termsLink.onclick = function() {
            termsModal.style.display = "block";
        }

        // Open Privacy Modal
        privacyLink.onclick = function() {
            privacyModal.style.display = "block";
        }

        // Close modals when <span> (x) is clicked
        for (var i = 0; i < closeButtons.length; i++) {
            closeButtons[i].onclick = function() {
                termsModal.style.display = "none";
                privacyModal.style.display = "none";
            }
        }

        // Close modals when clicking outside the modal
        window.onclick = function(event) {
            if (event.target == termsModal) {
                termsModal.style.display = "none";
            }
            if (event.target == privacyModal) {
                privacyModal.style.display = "none";
            }
        }
   // Add
                  function checkPasswordMatch() {
                 const password = document.getElementById("password").value;
                 const confirmPassword = document.getElementById("confirm-password").value;
                 const message = document.getElementById("passwordMatchMessage");

                 if (password && confirmPassword) {
                     if (password !== confirmPassword) {
                         message.textContent = "Passwords do not match.";
                         message.style.display = "block"; // Show mismatch warning
                     } else {
                         message.style.display = "none"; // Hide warning
                     }
                 } else {
                     message.style.display = "none"; // Hide warning if one field is empty
                 }
             }

             function togglePasswordVisibility(fieldId, iconElement) {
                 const field = document.getElementById(fieldId);
                 const isPasswordVisible = field.type === "text";

                 // Toggle password visibility
                 field.type = isPasswordVisible ? "password" : "text";

                 // Update icon (optional)
                 iconElement.innerHTML = isPasswordVisible
                     ? '<i class="bx bx-hide"></i>'
                     : '<i class="bx bx-show"></i>';
             }



             function togglePasswordVisibility(fieldId, iconElement) {
                 const field = document.getElementById(fieldId);
                 const isPasswordVisible = field.getAttribute("type") === "text";

                 // Toggle password visibility
                 field.setAttribute("type", isPasswordVisible ? "password" : "text");

                 // Toggle icon (optional)
                 if (isPasswordVisible) {
                     iconElement.innerHTML = '<i class="bx bx-hide"></i>';
                 } else {
                     iconElement.innerHTML = '<i class="bx bx-show"></i>';
                 }
             }


                     // Show/Hide Password
                     function togglePasswordVisibility(fieldId, toggleIcon) {
                         const passwordField = document.getElementById(fieldId);
                         const icon = toggleIcon.querySelector("i");
                         if (passwordField.type === "password") {
                             passwordField.type = "text";
                             icon.classList.remove("bx-hide");
                             icon.classList.add("bx-show");
                         } else {
                             passwordField.type = "password";
                             icon.classList.remove("bx-show");
                             icon.classList.add("bx-hide");
                         }
                     }

                     //PasswordLengthCounter
               function updatePasswordLengthCounter() {
                 const passwordField = document.getElementById("password");
                 const counter = document.getElementById("passwordCounter");
                 const loginButton = document.getElementById("loginButton");

                 const minLength = 15; // Minimum length
                 const maxLength = 64; // Maximum length

                 // Get current password length
                 const length = passwordField.value.length;

                 // Update counter display
                 counter.textContent = `${length}/${maxLength}`;

                 // Change counter color based on length
                 if (length < minLength) {
                     counter.style.color = "red"; // Too short
                     loginButton.disabled = true; // Disable login button
                 } else if (length > maxLength) {
                     counter.style.color = "red"; // Exceeds max length
                     loginButton.disabled = true; // Disable login button
                 } else {
                     counter.style.color = "green"; // Valid length
                     loginButton.disabled = false; // Enable login button
                 }
             }

               //PasswordLengthCounter
               function updateConfirmPasswordLengthCounter() {
                 const passwordField = document.getElementById("confirm-password");
                 const counter = document.getElementById("confirmPasswordCounter");
                 const loginButton = document.getElementById("loginButton");

                 const minLength = 15; // Minimum length
                 const maxLength = 64; // Maximum length

                 // Get current password length
                 const length = passwordField.value.length;

                 // Update counter display
                 counter.textContent = `${length}/${maxLength}`;

                 // Change counter color based on length
                 if (length < minLength) {
                     counter.style.color = "red"; // Too short
                     loginButton.disabled = true; // Disable login button
                 } else if (length > maxLength) {
                     counter.style.color = "red"; // Exceeds max length
                     loginButton.disabled = true; // Disable login button
                 } else {
                     counter.style.color = "green"; // Valid length
                     loginButton.disabled = false; // Enable login button
                 }
             }
    </script>
</body>
</html>