﻿@{
    ViewData["Title"] = "Cozy Homes - Maintenance Assignment";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

@model List<MaintenanceAssignmentViewModel>


<style>
    /* body { */
    /*     font-family: Arial, sans-serif; */
    /* } */

    /* Button Styling */
    .start-btn {
        background-color: #007BFF;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
    }

    .start-btn:hover {
            background-color: #0056b3;
    }
    /* Button Styling */
    .mark-as-done-btn {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
    }

        .mark-as-done-btn:hover {
            background-color: #45a049;
        }

    /* Modal Styling */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 20px;
        border: 1px solid #888;
        border-radius: 8px;
        width: 40%;
        text-align: left;
    }

    .modal-header {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .modal input,
    .modal textarea {
        width: 100%;
        padding: 8px;
        margin: 10px 0;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
    }

    .modal-buttons {
        text-align: right;
    }

    .close-btn,
    .save-btn {
        background-color: #4CAF50;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .close-btn {
        background-color: #f44336;
    }

        .close-btn:hover {
            background-color: #d32f2f;
        }

    .save-btn:hover {
        background-color: #45a049;
    }

    table thead tr th {
        text-align: center;
    }

    table tbody tr td {
        text-align: center;
    }

    .table-container th, .table-container td {
        text-align: center;
    }

    .start-btn, .mark-as-done-btn {
        text-decoration: none;
    }

    .start-btn:hover, .mark-as-done-btn:hover {
        color: white;
    }
</style>
<div class="requests-container-list" style="min-height: 100vh;">

    @if (TempData["ShowPopup"] != null && (bool)TempData["ShowPopup"])
    {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                Swal.fire({
                    title: '@TempData["PopupTitle"]',  // Set the title dynamically
                    text: '@TempData["PopupMessage"]', // Set the message dynamically
                    icon: '@TempData["PopupIcon"]',    // Set the icon dynamically (success, error, warning, info)
                    confirmButtonText: 'OK'
                });
            });
        </script>
    }


    <header>
        <div class="main-header">
            <p><span class="header-title">MAINTENANCE ASSIGNMENT</span></p>
        </div>
    </header>
    <main class="container">

        <!-- Table -->
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Tenant Name</th>
                        <th>Unit Name</th>
                        <th>Date Requested</th>
                        <th>Request Task</th>
                        <th>Category</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        int index = 1;
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@index</td> 
                                <td>@item.TenantName</td>
                                <td>@item.UnitName</td>
                                <td>@item.DateRequested</td>
                                <td>@item.RequestTask</td>
                                <td>@item.Category</td>
                                <td>@item.Status</td>
                                <td>
                                    <a asp-action="StartRequest" asp-route-id="@item.RequestID" class="start-btn" style="text-decoration: none;">Start</a>
                                    <a class="mark-as-done-btn" id="markAsDoneBtn" style="text-decoration: none;" href="#">Mark As Done</a>
                                </td>
                            </tr>
                            index++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" style="text-align:center;">No maintenance requests.</td>
                        </tr>
                    }
                </tbody>

            </table>

        </div>

    </main>


    <!-- Modal -->
    <div id="markAsDoneModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">Mark As Done</div>
            <form id="markAsDoneForm">
                <label for="done-date">Date:</label>
                <input type="text" id="done-date" placeholder="Select a date" required>

                <label for="done-time">Time:</label>
                <input type="time" id="done-time" required>

                <label for="done-comment">Comment:</label>
                <textarea id="done-comment" rows="4" placeholder="Enter your comment"></textarea>

                <label for="done-fee">Fee:</label>
                <input type="number" id="done-fee" placeholder="Enter fee amount" required>

                <div class="modal-buttons">
                    <button type="button" class="close-btn" id="closeModalBtn">Close</button>
                    <button type="submit" class="save-btn">Save</button>
                </div>
            </form>
        </div>
    </div>

</div>


<script>

    // Modal functionality
    const modal = document.getElementById('markAsDoneModal');
    const openModalBtn = document.getElementById('markAsDoneBtn');
    const closeModalBtn = document.getElementById('closeModalBtn');
    const form = document.getElementById('markAsDoneForm');

    // Open modal
    openModalBtn.addEventListener('click', () => {
      modal.style.display = 'block';
    });

    // Close modal
    closeModalBtn.addEventListener('click', () => {
      modal.style.display = 'none';
    });

    // Close modal when clicking outside
    window.addEventListener('click', (event) => {
      if (event.target === modal) {
        modal.style.display = 'none';
      }
    });

    // // Handle form submission
    // form.addEventListener('submit', (event) => {
    //   event.preventDefault();
    //   const date = document.getElementById('done-date').value;
    //   const time = document.getElementById('done-time').value;
    //   const comment = document.getElementById('done-comment').value;
    //   const fee = document.getElementById('done-fee').value;

    //   // Save the data (you can replace this with an API call or database logic)
    //   console.log({ date, time, comment, fee });

    //   alert('Marked as done successfully!');
    //   modal.style.display = 'none';
    //   form.reset();
    // });
</script>